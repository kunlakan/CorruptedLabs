#BlueJ class context
comment0.params=
comment0.target=void\ buildGame()
comment0.text=\r\n\ To\ be\ overridden\ by\ the\ student.\ \ This\ method\ should\ be\ used\ to\ "build\ the\ world"\ of\ the\ game\ by\ drawing\ key\ elements.\r\n\ To\ create\ a\ full\ game,\ this\ method\ should\:\r\n\ \ \ \ \ \ Place\ all\ major\ elements\ onto\ the\ screen\ for\ the\ game.\ \r\n\ \ \ \ \ \ \ \ \ \ \ -Laser\r\n\ \ \ \ \ \ \ \ \ \ \ -Grid\ of\ tiles\r\n\ \ \ \ \ \ \ \ \ \ \ -Counter\r\n\ \ \ \ \ \ Start\ a\ timer\ for\ the\ tiles\ to\ shift\ across\ the\ screen.\r\n
comment1.params=
comment1.target=void\ updateGame()
comment1.text=\r\n\ To\ be\ overridden\ by\ the\ student.\ \ This\ method\ should\ be\ used\ to\ "update\ the\ world"\ of\ the\ game\ by\ checking\ for\ user\ input\ and\ win/lose\ conditions.\r\n\ To\ create\ a\ full\ game,\ this\ method\ should\ handle\:\r\n\ \ \ \ \ \ -Checking\ for\ win/lose\ state\r\n\ \ \ \ \ \ -Checking\ if\ player\ presses\ Up,\ Down,\ Left,\ or\ Right\r\n\ \ \ \ \ \ -Perform\ tasks\ depending\ on\ input\r\n\ \ \ \ \ \ -Update\ the\ counter\r\n\ \ \ \ \ \ -Delete\ missed\ tiles\ (those\ that\ have\ gone\ too\ far\ left\ on\ the\ screen\ to\ be\ playable)\r\n
comment10.params=x\ y
comment10.target=void\ drawTile(int,\ int)
comment10.text=\r\n\ Draws\ a\ single\ tile\ on\ the\ screen\r\n\ @param\ x\ the\ x\ coordinate\ position\ to\ place\ the\ tile.\r\n\ @param\ y\ the\ y\ coordinate\ position\ to\ place\ the\ tile\r\n
comment11.params=x\ y\ color
comment11.target=void\ drawTile(int,\ int,\ java.lang.String)
comment11.text=\r\n\ Draws\ a\ single\ tile\ on\ the\ screen\r\n\ @param\ x\ the\ x\ coordinate\ position\ to\ place\ the\ tile.\r\n\ @param\ y\ the\ y\ coordinate\ position\ to\ place\ the\ tile\r\n\ @param\ color\ a\ String\ of\ the\ color\ of\ the\ new\ tile\r\n
comment12.params=x\ y\ color
comment12.target=void\ drawTile(int,\ int,\ gridElements.GridElement.ColorEnum)
comment12.text=\r\n\ Helper\ Method,\ not\ to\ be\ used\ by\ students.\r\n\ Draws\ a\ single\ tile\ on\ the\ screen\ (using\ ColorEnums\ from\ old\ code)\r\n\ @param\ x\ the\ x\ coordinate\ position\ to\ place\ the\ tile.\r\n\ @param\ y\ the\ y\ coordinate\ position\ to\ place\ the\ tile\r\n\ @param\ color\ a\ GridElement.ColorEnum\ of\ the\ color\ of\ the\ new\ tile\r\n
comment13.params=
comment13.target=void\ drawNewTileFromLaser()
comment13.text=\r\n\ Places\ a\ new\ tile\ of\ the\ current\ laser\ color\ at\ the\r\n\ appropriate\ place\ on\ the\ board.\r\n
comment14.params=x
comment14.target=void\ drawColumn(int)
comment14.text=\r\n\ Draws\ a\ column\ of\ randomly\ colored\ tiles.\r\n\ @param\ x\ the\ x\ coordinate\ position\ to\ place\ the\ column\r\n
comment15.params=
comment15.target=void\ drawBoard()
comment15.text=\r\n\ Creates\ a\ color\ map\ which\ is\ used\ to\ generate\ random\ tile\ colors,\ so\ it\ can\ draw\ a\ board.\r\n\ Draws\ 26\ columns\ of\ tiles\ on\ the\ screen\ to\ create\ a\ grid\r\n
comment16.params=
comment16.target=void\ deleteMissedTiles()
comment16.text=\r\n\ Deletes\ any\ tiles\ that\ have\ shifted\ too\ far\ left\ on\ the\ screen\ to\ be\ playable.\r\n
comment17.params=x\ y
comment17.target=void\ markTileForDelete(int,\ int)
comment17.text=\r\n\ \ Helper\ method\ for\ deleting\ tiles.\ Students\ should\ not\ use\ this.\r\n\ \ Marks\ the\ tile\ at\ location\ x,\ y\ to\ be\ deleted\ on\ next\ update.\r\n\ \ @param\ x\ the\ x\ location\ of\ the\ tile.\r\n\ \ @param\ y\ the\ y\ location\ of\ the\ tile\r\n
comment18.params=matches
comment18.target=void\ deleteMatchedTiles(java.util.ArrayList)
comment18.text=\r\n\ Marks\ the\ tiles\ in\ the\ array\ of\ matched\ tiles\ for\ deletion.\r\n\ They\ will\ be\ deleted\ on\ the\ next\ update.\r\n\ @param\ matches\ An\ ArrayList\ of\ the\ IntVector\ locations\ of\ matched\ tiles.\r\n
comment19.params=
comment19.target=void\ deleteMatchingTiles()
comment19.text=\r\n\ Deletes\ all\ tiles\ marked\ for\ deletion\r\n
comment2.params=
comment2.target=void\ updateCounter()
comment2.text=\r\n\ Updates\ the\ counter\ to\ show\ the\ remaining\ number\ of\ tiles\ that\ need\ to\ be\ matched\ to\ win\ the\ game.\r\n
comment20.params=
comment20.target=void\ initializeColorMap()
comment20.text=\r\n\ Sets\ values\ for\ array\ of\ Strings\ of\ color\ names.\r\n\ Used\ to\ help\ generate\ random\ tile\ colors.\r\n
comment21.params=
comment21.target=java.lang.String\ getRandomColor()
comment21.text=\r\n\ Generates\ a\ random\ color\r\n\ @return\ a\ random\ color\ from\ the\ array\ of\ available\ tile\ colors\ in\ the\ game\r\n
comment22.params=color
comment22.target=gridElements.GridElement.ColorEnum\ getColor(java.lang.String)
comment22.text=\r\n\ Translates\ a\ String\ of\ a\ color\ name\ to\ a\ ColorEnum\ so\ that\r\n\ old\ code\ (on\ which\ this\ API\ is\ built)\ can\ understand\ it.\r\n\ @param\ color\ String\ of\ a\ color\ name\r\n\ @return\ ColorEnum\ that\ matches\ the\ requested\ color\ String.\ \ If\ error,\ will\ return\ Cyan\ by\ default.\r\n
comment23.params=
comment23.target=void\ drawLaser()
comment23.text=\r\n\ Draws\ the\ player-controlled\ laser\ onto\ the\ screen.\r\n
comment24.params=
comment24.target=void\ moveLaserUp()
comment24.text=\r\n\ Moves\ the\ laser\ up.\r\n
comment25.params=
comment25.target=void\ moveLaserDown()
comment25.text=\r\n\ Moves\ the\ laser\ down.\r\n
comment26.params=
comment26.target=void\ setNewLaserColor()
comment26.text=\r\n\ Sets\ the\ color\ of\ the\ laser\ to\ be\ a\ random\ color\r\n
comment27.params=
comment27.target=boolean\ pressingUp()
comment27.text=\r\n\ @return\ true\ if\ the\ user\ is\ pressing\ the\ up\ arrow\r\n
comment28.params=
comment28.target=boolean\ pressingDown()
comment28.text=\r\n\ @return\ true\ if\ the\ user\ is\ pressing\ the\ down\ arrow\r\n
comment29.params=
comment29.target=boolean\ pressingLeft()
comment29.text=\r\n\ @return\ true\ if\ the\ user\ is\ pressing\ the\ left\ arrow\r\n
comment3.params=count
comment3.target=void\ setCounterValue(int)
comment30.params=
comment30.target=boolean\ pressingRight()
comment30.text=\r\n\ @return\ true\ if\ the\ user\ is\ pressing\ the\ right\ arrow\r\n
comment31.params=
comment31.target=boolean\ pressingSpace()
comment31.text=\r\n\ @return\ true\ if\ the\ user\ is\ pressing\ the\ space\ bar\r\n
comment32.params=num
comment32.target=void\ setTilesInMatchSet(int)
comment32.text=\r\n\ Sets\ the\ number\ of\ tiles\ that\ have\ to\ be\ matched\ before\ they\ can\ be\ deleted.\r\n
comment33.params=num
comment33.target=void\ setTilesToWin(int)
comment33.text=\r\n\ Sets\ the\ number\ of\ tiles\ that\ need\ to\ be\ matched\ to\ win.\r\n\ @param\ num\ Number\ of\ tiles\ that\ need\ to\ be\ matched\ to\ win\r\n
comment34.params=
comment34.target=void\ startTimerForTiles()
comment34.text=\r\n\ Initialize\ the\ start\ timer\ for\ the\ tile\ shifts\r\n\ Set\ to\ 300\ by\ default.\r\n
comment35.params=seconds
comment35.target=void\ startTimerForTiles(int)
comment35.text=\r\n\ Initialize\ the\ start\ timer\ for\ the\ tile\ shifts.\r\n\ @param\ seconds\ number\ of\ 1/100\ seconds\ (approx)\ between\ shifts\r\n
comment36.params=
comment36.target=void\ shiftTilesLeft()
comment36.text=\r\n\ Shifts\ all\ tiles\ left.\r\n
comment37.params=
comment37.target=int\ getNumberOfMatchingTiles()
comment37.text=\r\n\ @returns\ the\ number\ of\ matching\ tiles\r\n
comment38.params=a
comment38.target=void\ setGameWon(boolean)
comment38.text=\r\n\ Sets\ the\ game\ won\ state\ to\ true\ or\ false.\r\n\ @param\ a\ boolean\ of\ whether\ or\ not\ the\ game\ has\ been\ won\r\n
comment39.params=a
comment39.target=void\ setGameLost(boolean)
comment39.text=\r\n\ Sets\ the\ game\ lose\ state\ to\ true\ or\ false.\r\n\ @param\ a\ boolean\ of\ whether\ or\ not\ the\ game\ has\ been\ lost\r\n
comment4.params=
comment4.target=void\ autoShift()
comment4.text=\r\n\ New\ function\ made\ by\ us\ so\ that\ students\ will\ not\ be\ confused\ by\ double\ equals\ operator\r\n
comment40.params=
comment40.target=void\ checkGameWon()
comment40.text=\r\n\ Checks\ if\ the\ player\ has\ matched\ the\ required\ number\ of\ tiles\ to\ win.\r\n\ If\ yes,\ displays\ the\ win\ screen.\r\n
comment41.params=
comment41.target=void\ initialize()
comment41.text=\r\n\ The\ initialize\ method\ is\ overriding\ the\ initialize\ method\ in\ the\ original\ game.\r\n\ In\ the\ API,\ it\ calls\ buildGame()\ which\ is\ what\ the\ students\ will\ be\ writing.\r\n
comment42.params=
comment42.target=void\ update()
comment42.text=\r\n\ The\ update\ method\ is\ overriding\ the\ update\ method\ in\ the\ original\ game.\r\n\ In\ the\ API,\ it\ calls\ updateGame()\ which\ is\ what\ the\ students\ will\ be\ writing.\r\n
comment43.params=
comment43.target=int\ handlePlayerTileCollision()
comment43.text=\r\n\ Called\ when\ player\ places\ a\ tile.\r\n\ Checks\ for\ matches\ and\ marks\ appropriate\ tiles\ for\ deletion.\r\n\ \r\n\ @return\ the\ number\ of\ matches\r\n
comment44.params=gfx
comment44.target=void\ draw(java.awt.Graphics)
comment44.text=\r\n\ @Override\r\n\ Draws\ things\ in\ the\ correct\ order\ so\ they\ actually\ show\ up\ on\ the\ screen\r\n
comment45.params=
comment45.target=java.util.ArrayList\ getMatchedTileArray()
comment45.text=\r\n\ Gets\ the\ ArrayList\ of\ IntVector\ locations\ of\ matched\ tiles.\r\n\ @return\ an\ ArrayList\ of\ IntVector\ locations\ of\ matched\ tiles.\r\n
comment46.params=
comment46.target=structures.IntVector\ placePlayerTile()
comment46.text=\r\n\ Helpelr\ method.\r\n\ Places\ a\ new\ tile\ at\ the\ position\ the\ player\ is\ pointing\ the\ laser\ at.\r\n\ @return\ the\ IntVector\ representing\ the\ position\ the\ tile\ was\ placed.\r\n
comment47.params=tile
comment47.target=structures.IntVector\ placePlayerTile(gridElements.Tile)
comment47.text=\r\n\ Helper\ method.\r\n\ Places\ a\ tile\ at\ the\ position\ the\ player\ is\ pointing\ the\ laser\ at.\r\n\ @param\ the\ tile\ to\ be\ placed\r\n\ @return\ the\ IntVector\ representing\ the\ position\ the\ tile\ was\ placed.\r\n
comment48.params=
comment48.target=void\ drawArrow()
comment49.params=
comment49.target=void\ fallCrab()
comment5.params=
comment5.target=boolean\ isTimeToShift()
comment5.text=\r\n\ Increments\ the\ shift\ timer.\r\n\ @return\ true\ if\ the\ timer\ successfully\ incremented\r\n
comment50.params=x0\ x1\ y
comment50.target=boolean\ crabNotOnPlatform(int,\ int,\ int)
comment6.params=
comment6.target=void\ drawCounter()
comment6.text=\r\n\ Draws\ the\ counter\ on\ the\ screen.\r\n
comment7.params=
comment7.target=void\ winGame()
comment7.text=\r\n\ Sets\ the\ game\ state\ to\ win.\r\n\ Calling\ this\ method\ will\ trigger\ the\ win\ screen\ to\ appear.\r\n
comment8.params=
comment8.target=void\ loseGame()
comment8.text=\r\n\ Sets\ the\ game\ state\ to\ lost.\r\n\ Calling\ this\ method\ will\ trigger\ the\ lost\ screen\ to\ appear.\r\n
comment9.params=
comment9.target=void\ drawTile()
comment9.text=\r\n\ Draws\ a\ single\ tile\ on\ the\ screen\r\n
numComments=51
